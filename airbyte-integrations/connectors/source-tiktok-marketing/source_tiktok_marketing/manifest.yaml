version: 0.88.2
type: DeclarativeSource
check:
  type: CheckStream
  stream_names:
    - advertiser_ids

definitions:
  schema_loader:
    type: JsonFileSchemaLoader
    file_path: "./source_tiktok_marketing/schemas/{{ parameters.get('schema_name', parameters['name']) }}.json"

  authenticator:
    type: ApiKeyAuthenticator
    api_token: '{{ config[''credentials''][''access_token''] if config.get(''credentials'') else config[''access_token''] }}'
    inject_into:
      type: RequestOption
      inject_into: header
      field_name: Access-Token

  requester:
    type: HttpRequester
    url_base: '{{ "https://sandbox-ads.tiktok.com/open_api/v1.3/" if config.get(''credentials'', {})[''auth_type''] == "sandbox_access_token" else "https://business-api.tiktok.com/open_api/v1.3/" }}'
    path: "{{ parameters['path'] }}"
    http_method: GET
  
  record_selector:
    type: RecordSelector
    schema_normalization: Default
    extractor:
      type: DpathExtractor
      field_path: [ "data", "list" ]

  record_selector_with_filter_by_midify_time:
    $ref: "#/definitions/record_selector"
    record_filter:
      type: CustomRecordFilter
      class_name: "source_tiktok_marketing.components.semi_incremental_record_filter.PerPartitionRecordFilter"
      condition: "{{ record['modify_time'] >= stream_state.get('modify_time', config.get('start_date', '')) }}"

  retriever:
    type: SimpleRetriever
    requester:
      $ref: "#/definitions/requester"
      request_headers: { }
      authenticator:
        $ref: "#/definitions/authenticator"
      request_body_json: { }
    record_selector:
      $ref: "#/definitions/requester"
    paginator:
      type: NoPagination
    partition_router: [ ]

  paginator_page_increment:
    type: "DefaultPaginator"
    page_size_option:
      type: "RequestOption"
      inject_into: "request_parameter"
      field_name: "page_size"
    pagination_strategy:
      type: "PageIncrement"
      page_size: 100
    page_token_option:
      type: "RequestOption"
      inject_into: "request_parameter"
      field_name: "page"
  
  incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: "modify_time"
    cursor_datetime_formats:
      - "%Y-%m-%d %H:%M:%S"
      - "%Y-%m-%dT%H:%M:%SZ"
    datetime_format: "%Y-%m-%d %H:%M:%SZ"
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ config.get('start_date', '1990-01-01') }}"
      datetime_format: "%Y-%m-%d"
  
  single_id_partition_router:
    - class_name: "source_tiktok_marketing.components.advertiser_ids_partition_router.AdvertiserIdPartitionRouter"
      parent_stream_configs:
        - type: ParentStreamConfig
          parent_key: advertiser_id
          request_option:
            inject_into: request_parameter
            type: RequestOption
            field_name: advertiser_id
          partition_field: advertiser_id
          stream:
            $ref: "#/definitions/advertiser_ids_stream"
  
  multiple_id_partition_router:
    - class_name: "source_tiktok_marketing.components.advertiser_ids_partition_router.AdvertiserIdsPartitionRouter"
      parent_stream_configs:
        - type: ParentStreamConfig
          parent_key: advertiser_id
          request_option:
            inject_into: request_parameter
            type: RequestOption
            field_name: advertiser_ids
          partition_field: advertiser_ids
          stream:
            $ref: "#/definitions/advertiser_ids_stream"
  
  incremental_stream:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        $ref: "#/definitions/record_selector_with_filter_by_midify_time"
      paginator:
        $ref: "#/definitions/paginator_page_increment"
        pagination_strategy:
          type: "PageIncrement"
          page_size: '{{ parameters.get("page_size", 1000) }}'
      partition_router:
        $ref: "#/definitions/single_id_partition_router"
    incremental_sync:
      $ref: "#/definitions/incremental_sync"
  
  advertiser_ids_stream:
    type: DeclarativeStream
    name: advertiser_ids
    $parameters:
      name: "advertiser_ids"
      path: "oauth2/advertiser/get/"
    primary_key:
      - advertiser_id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          secret: '{{ config[''credentials''][''secret''] }}'
          app_id: '{{ config[''credentials''].get(''app_id'', 0) }}'
        request_headers: { }
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        $ref: "#/definitions/record_selector"
      paginator:
        type: NoPagination
      partition_router: [ ]

  advertisers_stream:
    type: DeclarativeStream
    name: advertisers
    $parameters:
      name: "advertiser_ids"
      path: "advertiser/info/"
    primary_key:
      - advertiser_id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        $ref: "#/definitions/record_selector"
      paginator:
        $ref:  "#/definitions/paginator_page_increment"
      partition_router:
        $ref:  "#/definitions/multiple_id_partition_router"

  audiences_stream:
    type: DeclarativeStream
    name: audiences
    $parameters:
      name: "audiences"
      path: "dmp/custom_audience/list/"
    primary_key:
      - audience_id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        $ref: "#/definitions/record_selector"
      paginator:
        $ref: "#/definitions/paginator_page_increment"
      partition_router:
        $ref:  "#/definitions/single_id_partition_router"

  creative_assets_music_stream:
    type: DeclarativeStream
    name: creative_assets_music
    $parameters:
      name: "creative_assets_music"
      path: "file/music/get/"
    primary_key:
      - music_id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        type: RecordSelector
        schema_normalization: Default
        extractor:
          type: DpathExtractor
          field_path: [ "data", "musics" ]
      paginator:
        $ref: "#/definitions/paginator_page_increment"
      partition_router:
        $ref:  "#/definitions/single_id_partition_router"

#  TODO: empty stream
  creative_assets_portfolios_stream:
    type: DeclarativeStream
    name: creative_assets_portfolios
    $parameters:
      name: "creative_assets_portfolios"
      path: "creative/portfolio/list/"
    primary_key:
      - creative_portfolio_id
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        type: RecordSelector
        schema_normalization: Default
        extractor:
          type: DpathExtractor
          field_path: [ "data", "creative_portfolios" ]
      paginator:
        $ref: "#/definitions/paginator_page_increment"
      partition_router:
        $ref:  "#/definitions/single_id_partition_router"

  campaigns_stream:
    type: DeclarativeStream
    name: campaigns
    $parameters:
      name: "campaigns"
      path: "campaign/get/"
    primary_key:
      - campaign_id
    $ref: "#/definitions/incremental_stream"

  ad_groups_stream:
    type: DeclarativeStream
    name: ad_groups
    $parameters:
      name: "ad_groups"
      path: "adgroup/get/"
    primary_key:
      - adgroup_id
    $ref: "#/definitions/incremental_stream"

  ads_stream:
    type: DeclarativeStream
    name: ads
    $parameters:
      name: "ads"
      path: "ad/get/"
    primary_key:
      - ad_id
    $ref: "#/definitions/incremental_stream"
  
  creative_assets_images_stream:
    type: DeclarativeStream
    name: creative_assets_images
    $parameters:
      name: "creative_assets_images"
      path: "file/image/ad/search/"
      page_size: 100
    primary_key:
      - image_id
    $ref: "#/definitions/incremental_stream"

  creative_assets_videos_stream:
    type: DeclarativeStream
    name: creative_assets_videos
    $parameters:
      name: "creative_assets_videos"
      path: "file/video/ad/search/"
      page_size: 100
    primary_key:
      - video_id
    $ref: "#/definitions/incremental_stream"

  record_selector_for_daily_reports_streams:
    $ref: "#/definitions/record_selector"
    record_filter:
      type: CustomRecordFilter
      class_name: "source_tiktok_marketing.components.semi_incremental_record_filter.PerPartitionRecordFilter"
      condition: "{{ record['dimensions']['stat_time_day'] >= stream_state.get('stat_time_day', config.get('start_date', '')) }}"
  
  record_selector_for_hourly_reports_streams:
    $ref: "#/definitions/record_selector"
    record_filter:
      type: CustomRecordFilter
      class_name: "source_tiktok_marketing.components.semi_incremental_record_filter.PerPartitionRecordFilter"
      condition: "{{ record['dimensions']['stat_time_hour'] >= stream_state.get('stat_time_hour', config.get('start_date', '')) }}"

  base_report_retriever:
    type: SimpleRetriever
    requester:
      $ref: "#/definitions/requester"
      request_parameters:
        service_type: 'AUCTION'
        report_type: 'BASIC'
        data_level: '{{ parameters["data_level"] }}'
        dimensions: '{{ parameters["dimensions"] | string }}'
        metrics: '{{ (parameters["report_metrics"] + ["spend", "cpc", "cpm", "impressions", "clicks", "ctr", "reach", "cost_per_1000_reached", "frequency", "video_play_actions", "video_watched_2s", "video_watched_6s", "average_video_play", "average_video_play_per_user", "video_views_p25", "video_views_p50", "video_views_p75", "video_views_p100", "profile_visits", "likes", "comments", "shares", "follows", "clicks_on_music_disc", "real_time_app_install", "real_time_app_install_cost", "app_install"] if parameters["report_metrics"] != "None" else ["spend", "cpc", "cpm", "impressions", "clicks", "ctr", "reach", "cost_per_1000_reached", "frequency", "video_play_actions", "video_watched_2s", "video_watched_6s", "average_video_play", "average_video_play_per_user", "video_views_p25", "video_views_p50", "video_views_p75", "video_views_p100", "profile_visits", "likes", "comments", "shares", "follows", "clicks_on_music_disc", "real_time_app_install", "real_time_app_install_cost", "app_install"]) | string }}'
        start_date: '{{ stream_interval[''start_time''] }}'
        end_date: '{{ stream_interval[''end_time''] }}'
        filters: '{{ [
                {"filter_value": ["STATUS_ALL"], "field_name": "ad_status", "filter_type": "IN"},
                {"filter_value": ["STATUS_ALL"], "field_name": "campaign_status", "filter_type": "IN"},
                {"filter_value": ["STATUS_ALL"], "field_name": "adgroup_status", "filter_type": "IN"},
            ] | string if config.get("include_deleted", False)}}'
      authenticator:
        $ref: "#/definitions/authenticator"
      request_body_json: { }
    record_selector:
      $ref: "#/definitions/record_selector_for_daily_reports_streams"
    paginator:
      $ref: "#/definitions/paginator_page_increment"
      pagination_strategy:
        type: "PageIncrement"
        page_size: 1000
    partition_router:
      $ref: "#/definitions/single_id_partition_router"

  report_daily_incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: "stat_time_day"
    lookback_window: "P{{ config.get('attribution_window', 0) }}D"
    cursor_granularity: "P1D"
    step: P30D
    cursor_datetime_formats:
      - "%Y-%m-%d %H:%M:%S"
      - "%Y-%m-%dT%H:%M:%SZ"
    datetime_format: "%Y-%m-%d"
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ config.get('start_date', '1990-01-01') }}"
      datetime_format: "%Y-%m-%d"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ config.get('end_date', today_utc()) }}"
      datetime_format: "%Y-%m-%d"

  report_hourly_incremental_sync:
    type: DatetimeBasedCursor
    cursor_field: "stat_time_hour"
    lookback_window: "P{{ config.get('attribution_window', 0) }}D"
    cursor_granularity: "PT1H"
    step: P1D
    cursor_datetime_formats:
      - "%Y-%m-%d %H:%M:%S"
      - "%Y-%m-%dT%H:%M:%SZ"
    datetime_format: "%Y-%m-%d"
    start_datetime:
      type: MinMaxDatetime
      datetime: "{{ config.get('start_date', '1990-01-01') }}"
      datetime_format: "%Y-%m-%d"
    end_datetime:
      type: MinMaxDatetime
      datetime: "{{ config.get('end_date', today_utc()) }}"
      datetime_format: "%Y-%m-%d"

  base_report_daily:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_report_retriever"
      record_selector:
        $ref: "#/definitions/record_selector_for_daily_reports_streams"
    incremental_sync:
      $ref: "#/definitions/report_daily_incremental_sync"

  base_report_hourly:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/base_report_retriever"
      record_selector:
        $ref: "#/definitions/record_selector_for_hourly_reports_streams"
    incremental_sync:
      $ref: "#/definitions/report_hourly_incremental_sync"

  base_report_lifetime:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          service_type: 'AUCTION'
          report_type: 'BASIC'
          data_level: '{{ parameters["data_level"] }}'
          dimensions: '{{ parameters["dimensions"] | string }}'
          metrics: '{{ (parameters["report_metrics"] + ["spend", "cpc", "cpm", "impressions", "clicks", "ctr", "reach", "cost_per_1000_reached", "frequency", "video_play_actions", "video_watched_2s", "video_watched_6s", "average_video_play", "average_video_play_per_user", "video_views_p25", "video_views_p50", "video_views_p75", "video_views_p100", "profile_visits", "likes", "comments", "shares", "follows", "clicks_on_music_disc", "real_time_app_install", "real_time_app_install_cost", "app_install"] if parameters["report_metrics"] != "None" else ["spend", "cpc", "cpm", "impressions", "clicks", "ctr", "reach", "cost_per_1000_reached", "frequency", "video_play_actions", "video_watched_2s", "video_watched_6s", "average_video_play", "average_video_play_per_user", "video_views_p25", "video_views_p50", "video_views_p75", "video_views_p100", "profile_visits", "likes", "comments", "shares", "follows", "clicks_on_music_disc", "real_time_app_install", "real_time_app_install_cost", "app_install"]) | string }}'
          query_lifetime: "true"
          filters: '{{ [
                          {"filter_value": ["STATUS_ALL"], "field_name": "ad_status", "filter_type": "IN"},
                          {"filter_value": ["STATUS_ALL"], "field_name": "campaign_status", "filter_type": "IN"},
                          {"filter_value": ["STATUS_ALL"], "field_name": "adgroup_status", "filter_type": "IN"},
                      ] | string if config.get("include_deleted", False)}}'
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      paginator:
        $ref: "#/definitions/paginator_page_increment"
        pagination_strategy:
          type: "PageIncrement"
          page_size: 1000
      record_selector:
        $ref: "#/definitions/record_selector"
      partition_router:
        $ref: "#/definitions/single_id_partition_router"

  ads_reports_daily_stream:
    type: DeclarativeStream
    name: ads_reports_daily
    $parameters:
      name: "ads_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "basic_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate", "adgroup_id", "ad_name", "ad_text", "total_purchase_value", "total_onsite_shopping_value", "onsite_shopping", "vta_purchase", "vta_conversion", "cta_purchase", "cta_conversion", "total_pageview", "complete_payment", "value_per_complete_payment", "total_complete_payment_rate"]
      dimensions: [ "ad_id", "stat_time_day" ]
    primary_key:
      - ad_id
      - stat_time_day
    $ref: "#/definitions/base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"
    

  ad_groups_reports_daily_stream:
    type: DeclarativeStream
    name: ad_groups_reports_daily
    $parameters:
      name: "ad_groups_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate" ]
      dimensions: [ "adgroup_id", "stat_time_day" ]
    primary_key:
      - adgroup_id
      - stat_time_day
    $ref: "#/definitions/base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"

  advertisers_reports_daily_stream:
    type: DeclarativeStream
    name: advertisers_reports_daily
    $parameters:
      name: "advertisers_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "basic_reports"
      report_metrics: [ "cash_spend", "voucher_spend" ]
      dimensions: [ "advertiser_id", "stat_time_day" ]
    primary_key:
      - advertiser_id
      - stat_time_day
    $ref: "#/definitions/base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"

  campaigns_reports_daily_stream:
    type: DeclarativeStream
    name: campaigns_reports_daily
    $parameters:
      name: "campaigns_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name" ]
      dimensions: [ "campaign_id", "stat_time_day" ]
    primary_key:
      - campaign_id
      - stat_time_day
    $ref: "#/definitions/base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"
  
  audience_base_report_retriever:
    type: SimpleRetriever
    requester:
      $ref: "#/definitions/requester"
      request_parameters:
        service_type: 'AUCTION'
        report_type: 'AUDIENCE'
        data_level: '{{ parameters["data_level"] }}'
        dimensions: '{{ parameters["dimensions"] | string }}'
        metrics: '{{ (parameters["report_metrics"] + ["spend", "cpc", "cpm", "impressions", "clicks", "ctr"] if parameters["report_metrics"] != "None" else ["spend", "cpc", "cpm", "impressions", "clicks", "ctr"] ) | string  }}'
        start_date: '{{ stream_interval[''start_time''] }}'
        end_date: '{{ stream_interval[''end_time''] }}'
        filters: '{{ [
                        {"filter_value": ["STATUS_ALL"], "field_name": "ad_status", "filter_type": "IN"},
                        {"filter_value": ["STATUS_ALL"], "field_name": "campaign_status", "filter_type": "IN"},
                        {"filter_value": ["STATUS_ALL"], "field_name": "adgroup_status", "filter_type": "IN"},
                    ] | string if config.get("include_deleted", False)}}'
      authenticator:
        $ref: "#/definitions/authenticator"
      request_body_json: { }
    record_selector:
      $ref: "#/definitions/record_selector_for_daily_reports_streams"
    paginator:
      $ref: "#/definitions/paginator_page_increment"
      pagination_strategy:
        type: "PageIncrement"
        page_size: 1000
    partition_router:
      $ref: "#/definitions/single_id_partition_router"
  
  audience_base_report_daily:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      $ref: "#/definitions/audience_base_report_retriever"
    incremental_sync:
      $ref: "#/definitions/report_daily_incremental_sync"

  campaigns_audience_reports_daily_stream:
    type: DeclarativeStream
    name: campaigns_audience_reports_daily
    $parameters:
      name: "campaigns_audience_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "audience_reports"
      report_metrics: [ "campaign_name" ]
      dimensions: [ "campaign_id", "stat_time_day", "gender", "age" ]
    primary_key:
      - campaign_id
      - stat_time_day
      - gender
      - age
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"
          - path: [ "gender" ]
            value: "{{ record.dimensions.gender }}"
          - path: [ "age" ]
            value: "{{ record.dimensions.age }}"

  ad_group_audience_reports_daily_stream:
    type: DeclarativeStream
    name: ad_group_audience_reports_daily
    $parameters:
      name: "ad_group_audience_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "audience_reports"
      report_metrics: [ "campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate" ]
      dimensions: [ "adgroup_id", "stat_time_day", "gender", "age" ]
    primary_key:
      - adgroup_id
      - stat_time_day
      - gender
      - age
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"
          - path: [ "gender" ]
            value: "{{ record.dimensions.gender }}"
          - path: [ "age" ]
            value: "{{ record.dimensions.age }}"

  ads_audience_reports_daily_stream:
    type: DeclarativeStream
    name: ads_audience_reports_daily
    $parameters:
      name: "ads_audience_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "audience_reports"
      report_metrics: [ "campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "adgroup_id", "ad_name", "ad_text" ]
      dimensions: [ "ad_id", "stat_time_day", "gender", "age" ]
    primary_key:
      - ad_id
      - stat_time_day
      - gender
      - age
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"
          - path: [ "gender" ]
            value: "{{ record.dimensions.gender }}"
          - path: [ "age" ]
            value: "{{ record.dimensions.age }}"

  advertisers_audience_reports_daily_stream:
    type: DeclarativeStream
    name: advertisers_audience_reports_daily
    $parameters:
      name: "advertisers_audience_reports_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "audience_reports"
      report_metrics: None  # common params included in base report
      dimensions: ["advertiser_id", "stat_time_day", "gender", "age"]
    primary_key:
      - advertiser_id
      - stat_time_day
      - gender
      - age
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"
          - path: [ "gender" ]
            value: "{{ record.dimensions.gender }}"
          - path: [ "age" ]
            value: "{{ record.dimensions.age }}"

  campaigns_audience_reports_by_country_daily_stream:
    type: DeclarativeStream
    name: campaigns_audience_reports_by_country_daily
    $parameters:
      name: "campaigns_audience_reports_by_country_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name"]
      dimensions: ["campaign_id", "stat_time_day", "country_code"]
    primary_key:
      - campaign_id
      - stat_time_day
      - country_code
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"
          - path: [ "country_code" ]
            value: "{{ record.dimensions.country_code }}"

  ad_group_audience_reports_by_country_daily_stream:
    type: DeclarativeStream
    name: ad_group_audience_reports_by_country_daily
    $parameters:
      name: "ad_group_audience_reports_by_country_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate"]
      dimensions: ["adgroup_id", "stat_time_day", "country_code"]
    primary_key:
      - adgroup_id
      - stat_time_day
      - country_code
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"
          - path: [ "country_code" ]
            value: "{{ record.dimensions.country_code }}"

  ads_audience_reports_by_country_daily_stream:
    type: DeclarativeStream
    name: ads_audience_reports_by_country_daily
    $parameters:
      name: "ads_audience_reports_by_country_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "adgroup_id", "ad_name", "ad_text"]
      dimensions: ["ad_id", "stat_time_day", "country_code"]
    primary_key:
      - ad_id
      - stat_time_day
      - country_code
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"
          - path: [ "country_code" ]
            value: "{{ record.dimensions.country_code }}"

  advertisers_audience_reports_by_country_daily_stream:
    type: DeclarativeStream
    name: advertisers_audience_reports_by_country_daily
    $parameters:
      name: "advertisers_audience_reports_by_country_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "audience_reports"
      report_metrics: None
      dimensions: ["advertiser_id", "stat_time_day", "country_code"]
    primary_key:
      - advertiser_id
      - stat_time_day
      - country_code
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"
          - path: [ "country_code" ]
            value: "{{ record.dimensions.country_code }}"

  campaigns_audience_reports_by_platform_daily_stream:
    type: DeclarativeStream
    name: campaigns_audience_reports_by_platform_daily
    $parameters:
      name: "campaigns_audience_reports_by_platform_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name"]
      dimensions: ["campaign_id", "stat_time_day", "platform"]
    primary_key:
      - campaign_id
      - stat_time_day
      - platform
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"
          - path: [ "platform" ]
            value: "{{ record.dimensions.platform }}"

  ad_group_audience_reports_by_platform_daily_stream:
    type: DeclarativeStream
    name: ad_group_audience_reports_by_platform_daily
    $parameters:
      name: "ad_group_audience_reports_by_platform_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate"]
      dimensions: ["adgroup_id", "stat_time_day", "platform"]
    primary_key:
      - adgroup_id
      - stat_time_day
      - platform
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"
          - path: [ "platform" ]
            value: "{{ record.dimensions.platform }}"

  ads_audience_reports_by_platform_daily_stream:
    type: DeclarativeStream
    name: ads_audience_reports_by_platform_daily
    $parameters:
      name: "ads_audience_reports_by_platform_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "adgroup_id", "ad_name", "ad_text"]
      dimensions: ["ad_id", "stat_time_day", "platform"]
    primary_key:
      - ad_id
      - stat_time_day
      - platform
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"
          - path: [ "platform" ]
            value: "{{ record.dimensions.platform }}"

  advertisers_audience_reports_by_platform_daily_stream:
    type: DeclarativeStream
    name: advertisers_audience_reports_by_platform_daily
    $parameters:
      name: "advertisers_audience_reports_by_platform_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "audience_reports"
      report_metrics: None
      dimensions: ["advertiser_id", "stat_time_day", "platform"]
    primary_key:
      - advertiser_id
      - stat_time_day
      - platform
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"
          - path: [ "platform" ]
            value: "{{ record.dimensions.platform }}"
  
  ads_audience_reports_by_province_daily_stream:
    type: DeclarativeStream
    name: ads_audience_reports_by_province_daily
    $parameters:
      name: "ads_audience_reports_by_province_daily"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "audience_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "adgroup_id", "ad_name", "ad_text"]
      dimensions: ["ad_id", "stat_time_day", "province_id"]
    primary_key:
      - ad_id
      - stat_time_day
      - province_id
    $ref: "#/definitions/audience_base_report_daily"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_day" ]
            value: "{{ record.dimensions.stat_time_day }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"
          - path: [ "province_id" ]
            value: "{{ record.dimensions.province_id }}"

  ads_reports_hourly_stream:
    type: DeclarativeStream
    name: ads_reports_hourly
    $parameters:
      name: "ads_reports_hourly"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate", "adgroup_id", "ad_name", "ad_text", "total_purchase_value", "total_onsite_shopping_value", "onsite_shopping", "vta_purchase", "vta_conversion", "cta_purchase", "cta_conversion", "total_pageview", "complete_payment", "value_per_complete_payment", "total_complete_payment_rate" ]
      dimensions: [ "ad_id", "stat_time_hour" ]
    primary_key:
      - ad_id
      - stat_time_hour
    $ref: "#/definitions/base_report_hourly"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_hour" ]
            value: "{{ record.dimensions.stat_time_hour }}"
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"

  advertisers_reports_hourly_stream:
    type: DeclarativeStream
    name: advertisers_reports_hourly
    $parameters:
      name: "advertisers_reports_hourly"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "basic_reports"
      report_metrics: None
      dimensions: [ "advertiser_id", "stat_time_hour" ]
    primary_key:
      - advertiser_id
      - stat_time_hour
    $ref: "#/definitions/base_report_hourly"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_hour" ]
            value: "{{ record.dimensions.stat_time_hour }}"
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"

  campaigns_reports_hourly_stream:
    type: DeclarativeStream
    name: campaigns_reports_hourly
    $parameters:
      name: "campaigns_reports_hourly"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name" ]
      dimensions: [ "campaign_id", "stat_time_hour" ]
    primary_key:
      - campaign_id
      - stat_time_hour
    $ref: "#/definitions/base_report_hourly"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_hour" ]
            value: "{{ record.dimensions.stat_time_hour }}"
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"

  ad_groups_reports_hourly_stream:
    type: DeclarativeStream
    name: ad_groups_reports_hourly
    $parameters:
      name: "ad_groups_reports_hourly"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "basic_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate"]
      dimensions: [ "adgroup_id", "stat_time_hour" ]
    primary_key:
      - adgroup_id
      - stat_time_hour
    $ref: "#/definitions/base_report_hourly"
    transformations:
      - type: AddFields
        fields:
          - path: [ "stat_time_hour" ]
            value: "{{ record.dimensions.stat_time_hour }}"
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"

  ads_reports_lifetime_stream:
    type: DeclarativeStream
    name: ads_reports_lifetime
    $parameters:
      name: "ads_reports_lifetime"
      path: "report/integrated/get/"
      data_level: "AUCTION_AD"
      schema_name: "basic_reports"
      report_metrics: ["campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate", "adgroup_id", "ad_name", "ad_text", "total_purchase_value", "total_onsite_shopping_value", "onsite_shopping", "vta_purchase", "vta_conversion", "cta_purchase", "cta_conversion", "total_pageview", "complete_payment", "value_per_complete_payment", "total_complete_payment_rate"]
      dimensions: [ "ad_id" ]
    primary_key:
      - ad_id
    $ref: "#/definitions/base_report_lifetime"
    transformations:
      - type: AddFields
        fields:
          - path: [ "ad_id" ]
            value: "{{ record.dimensions.ad_id }}"

  advertisers_reports_lifetime_stream:
    type: DeclarativeStream
    name: advertisers_reports_lifetime
    $parameters:
      name: "advertisers_reports_lifetime"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "basic_reports"
      report_metrics: None
      dimensions: [ "advertiser_id" ]
    primary_key:
      - advertiser_id
    $ref: "#/definitions/base_report_lifetime"
    transformations:
      - type: AddFields
        fields:
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"

  campaigns_reports_lifetime_stream:
    type: DeclarativeStream
    name: campaigns_reports_lifetime
    $parameters:
      name: "campaigns_reports_lifetime"
      path: "report/integrated/get/"
      data_level: "AUCTION_CAMPAIGN"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name" ]
      dimensions: [ "campaign_id" ]
    primary_key:
      - campaign_id
    $ref: "#/definitions/base_report_lifetime"
    transformations:
      - type: AddFields
        fields:
          - path: [ "campaign_id" ]
            value: "{{ record.dimensions.campaign_id }}"

  ad_groups_reports_lifetime_stream:
    type: DeclarativeStream
    name: ad_groups_reports_lifetime
    $parameters:
      name: "ad_groups_reports_lifetime"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADGROUP"
      schema_name: "basic_reports"
      report_metrics: [ "campaign_name", "campaign_id", "adgroup_name", "placement_type", "tt_app_id", "tt_app_name", "mobile_app_id", "promotion_type", "dpa_target_audience_type", "conversion", "cost_per_conversion", "conversion_rate", "real_time_conversion", "real_time_cost_per_conversion", "real_time_conversion_rate", "result", "cost_per_result", "result_rate", "real_time_result", "real_time_cost_per_result", "real_time_result_rate", "secondary_goal_result", "cost_per_secondary_goal_result", "secondary_goal_result_rate" ]
      dimensions: [ "adgroup_id" ]
    primary_key:
      - adgroup_id
    $ref: "#/definitions/base_report_lifetime"
    transformations:
      - type: AddFields
        fields:
          - path: [ "adgroup_id" ]
            value: "{{ record.dimensions.adgroup_id }}"

  audience_base_report_lifetime:
    schema_loader:
      $ref: "#/definitions/schema_loader"
    retriever:
      type: SimpleRetriever
      requester:
        $ref: "#/definitions/requester"
        request_parameters:
          service_type: 'AUCTION'
          report_type: 'AUDIENCE'
          data_level: '{{ parameters["data_level"] }}'
          dimensions: '{{ parameters["dimensions"] | string }}'
          metrics: '{{ (parameters["report_metrics"] + ["spend", "cpc", "cpm", "impressions", "clicks", "ctr"] if parameters["report_metrics"] != "None" else ["spend", "cpc", "cpm", "impressions", "clicks", "ctr"] ) | string  }}'
          start_date: '{{ day_delta(-365, "%Y-%m-%d") if config.get("start_date", "1990-01-01") < day_delta(-365, "%Y-%m-%d") else config["start_date"] }}'
          end_date: '{{ today_utc() }}'
          lifetime: "true"
          filters: '{{ [
                          {"filter_value": ["STATUS_ALL"], "field_name": "ad_status", "filter_type": "IN"},
                          {"filter_value": ["STATUS_ALL"], "field_name": "campaign_status", "filter_type": "IN"},
                          {"filter_value": ["STATUS_ALL"], "field_name": "adgroup_status", "filter_type": "IN"},
                      ] | string if config.get("include_deleted", False)}}'
        authenticator:
          $ref: "#/definitions/authenticator"
        request_body_json: { }
      record_selector:
        $ref: "#/definitions/record_selector"
      paginator:
        $ref: "#/definitions/paginator_page_increment"
        pagination_strategy:
          type: "PageIncrement"
          page_size: 1000
      partition_router:
        $ref: "#/definitions/single_id_partition_router"

  advertisers_audience_reports_lifetime_stream:
    type: DeclarativeStream
    name: advertisers_audience_reports_lifetime
    $parameters:
      name: "advertisers_audience_reports_lifetime"
      path: "report/integrated/get/"
      data_level: "AUCTION_ADVERTISER"
      schema_name: "audience_reports"
      report_metrics: None
      dimensions: [ "advertiser_id", "gender", "age" ]
    primary_key:
      - advertiser_id
      - gender
      - age
    $ref: "#/definitions/audience_base_report_lifetime"
    transformations:
      - type: AddFields
        fields:
          - path: [ "advertiser_id" ]
            value: "{{ record.dimensions.advertiser_id }}"
          - path: [ "gender" ]
            value: "{{ record.dimensions.gender }}"
          - path: [ "age" ]
            value: "{{ record.dimensions.age }}"

streams:
  - $ref: "#/definitions/advertiser_ids_stream"
  - $ref: "#/definitions/advertisers_stream"
  - $ref: "#/definitions/audiences_stream"
  - $ref: "#/definitions/creative_assets_music_stream"
  - $ref: "#/definitions/creative_assets_portfolios_stream"
  - $ref: "#/definitions/campaigns_stream"
  - $ref: "#/definitions/ad_groups_stream"
  - $ref: "#/definitions/ads_stream"
  - $ref: "#/definitions/creative_assets_images_stream"
  - $ref: "#/definitions/creative_assets_videos_stream"
  - $ref: "#/definitions/ads_reports_daily_stream"
  - $ref: "#/definitions/ad_groups_reports_daily_stream"
  - $ref: "#/definitions/advertisers_reports_daily_stream"
  - $ref: "#/definitions/campaigns_reports_daily_stream"
  - $ref: "#/definitions/campaigns_audience_reports_daily_stream"
  - $ref: "#/definitions/ad_group_audience_reports_daily_stream"
  - $ref: "#/definitions/ads_audience_reports_daily_stream"
  - $ref: "#/definitions/advertisers_audience_reports_daily_stream"
  - $ref: "#/definitions/campaigns_audience_reports_by_country_daily_stream"
  - $ref: "#/definitions/ad_group_audience_reports_by_country_daily_stream"
  - $ref: "#/definitions/ads_audience_reports_by_country_daily_stream"
  - $ref: "#/definitions/advertisers_audience_reports_by_country_daily_stream"
  - $ref: "#/definitions/campaigns_audience_reports_by_platform_daily_stream"
  - $ref: "#/definitions/ad_group_audience_reports_by_platform_daily_stream"
  - $ref: "#/definitions/ads_audience_reports_by_platform_daily_stream"
  - $ref: "#/definitions/advertisers_audience_reports_by_platform_daily_stream"
  - $ref: "#/definitions/ads_audience_reports_by_province_daily_stream"
  - $ref: "#/definitions/ads_reports_hourly_stream"
  - $ref: "#/definitions/advertisers_reports_hourly_stream"
  - $ref: "#/definitions/campaigns_reports_hourly_stream"
  - $ref: "#/definitions/ad_groups_reports_hourly_stream"
  - $ref: "#/definitions/ads_reports_lifetime_stream"
  - $ref: "#/definitions/advertisers_reports_lifetime_stream"
  - $ref: "#/definitions/campaigns_reports_lifetime_stream"
  - $ref: "#/definitions/ad_groups_reports_lifetime_stream"
  - $ref: "#/definitions/advertisers_audience_reports_lifetime_stream"

metadata:
  autoImportSchema:
    advertiser_ids: true
